
#------------------------------
# General
#------------------------------

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g history-limit 10000
set -sg escape-time 0

# Change keybind from ctrl+b to ctrl+a
unbind C-b
set -g prefix C-x
bind C-x send-prefix

set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1


#------------------------------
# Key binds
#------------------------------

# Unbind default key bindings, we're going to override
unbind %    # split-window -h
unbind '"'  # split-window
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind x    # kill-window
unbind p    # unbind for X clipboard integration


bind t split-window -h -c "#{pane_current_path}"
bind y split-window -v -c "#{pane_current_path}"

bind -n C-t new-window

# Select pane and windows
bind -n C-b previous-window
bind -n C-n next-window

# browser like tab (doesn't work for some reason)
#bind -n C-S-Tab previous-window
#bind -n C-Tab next-window

bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D
bind n new-window

# ALT+vim keys to select pane (-n: no prior escape seq)
#bind -n M-h select-pane -L
#bind -n M-l select-pane -R
#bind -n M-k select-pane -U
#bind -n M-j select-pane -D

#============================================
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
#============================================

# Zoom pane
bind + resize-pane -Z

# Kill pane/window/session shortcuts
bind w kill-pane
bind W kill-window
bind C-w confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Mouse can be toggled
bind-key m set-option -g mouse \; display "Mouse: #{?mouse,ON,OFF}"

# X clipboard integration Vim style
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"


#------------------------------
# Theme
#------------------------------
set -g status on
set -g status-position top
set -g status-justify left
set -g window-status-separator ""
#set -g status-justify "centre"

# the colors are based on the terminal default (16)
dark_gray="colour236"
med_gray="colour237"
light_gray="colour238"
lightest_gray="colour242"
white="colour249"
blue="colour110"

main=$light_gray    # main background color
alt=$blue           # alt background color (selected window, current session)
main_fg=$alt        # main foreground color (over main background)
alt_fg=$main        # alt foreground color (over alt background)

set -g @prefix_highlight_bg $alt
set -g @prefix_highlight_fg $main

# for powerline style
left=""
left_alt=""
right=""
right_alt=""

#left=""
#left_alt=""
#right=""
#right_alt=""

main_style="#[fg=$main_fg,bg=$main]"
alt_style="#[fg=$alt_fg,bg=$alt]"

# status bar main style
set -g status-style "fg=$main_fg,bg=$main"
set -g message-style "fg=$main_fg,bg=$main"
set -g window-status-style "fg=$main_fg,bg=$main"
set -g window-status-current-style "fg=$alt_fg,bg=$alt"

# status-left
a="$alt_style #S #[fg=$alt,bg=$med_gray]$right"
b="#[fg=$med_gray,bg=$main]$right"
c="#[fg=$lightest_gray]"
set -g status-left "$a$b$c"

# window status
set -g window-status-format " #I #W "
set -g window-status-current-format "#[fg=$main,bg=$alt]$right$alt_style #I #W #[fg=$alt,bg=$main]$right"

# status-right
x="#{prefix_highlight} #[fg=$lightest_gray]%b %d "
y="#[fg=$med_gray,bg=$main]$left#[fg=$alt,bg=$med_gray] %a %R "
z="#[fg=$alt]$left$alt_style #(whoami) #{battery_percentage} "
set -g status-right "$x$y$z"

# Set a darker background to inactive windows
#set -g window-style "bg=#141414"
#set -g window-active-style "bg=#1b1b1b"

set -g pane-border-style "fg=$main"
setw -g pane-active-border-style "fg=$alt"

# Run plugins
run-shell ~/.config/tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux
run-shell ~/.config/tmux/plugins/tmux-battery/battery.tmux

